#!/usr/bin/env python3
from slacker import Slacker
import evelink.api
import evelink.server
import argparse, configparser

parser = argparse.ArgumentParser(description='Send server status messages to Slack')
parser.add_argument('-c', '--config', help='Config file [default is server_status.conf in current dir]')
parser.add_argument('-d', '--debug', help='print debug output', action="store_true")
args = parser.parse_args()

if args.config:
    config_file = args.config
else:
    config_file = 'server_status.conf'

config = configparser.ConfigParser()
config.read(config_file)

api_key = config.get('slack', 'api_key')
bot_name = config.get('bot', 'name')
bot_icon = config.get('bot', 'icon')
status_file_name = config.get('bot', 'status_file')

slack = Slacker(api_key)

#server/ServerStatus
eve = evelink.server.Server()
rstatus = eve.server_status().result['online']
if rstatus:
    status = 'True'
    status_msg = 'UP'
else:
    status = 'False'
    status_msg = 'DOWN'

with open (status_file_name, "r") as status_file:
    data = status_file.readlines()[0].strip()

if not data == status:
    with open(status_file_name, "w") as status_file:
        print(status, file = status_file)
    slack.chat.post_message('#aba', 'The servers are {status_msg}'.format(status_msg=status_msg), username=bot_name, icon_url=bot_icon)
